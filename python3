import matplotlib.pyplot as plt
import numpy as np
import pandas as pd


veren = pd.read_csv('veren.csv')

massa_car = 0.5            # [kg]
massa_veer = 0.5           # [kg]
oppervlak_car = 0.15*0.1   # [m2]
cw_car = 0.9               # [-] Cw waarde van de wagen (luchtweerstand)
g = 9.81                   # [m/s2] zwaartekrachtversnelling
u_veer0 = 0.1              # [m] initiele uitrekking veer
k_veer = 500               # [N/m] veerconstante
x0 = 0                     # [m] startpositie
v0 = 0                     # [m] startsnelheid
rho = 1.2                  # [kg/m3] dichtheid lucht
diameter_as = 0.004        # [m]
diameter_wiel = 0.06       # [m]
cr = 0.1                   # [-] lagerweerstand

overbrenging = diameter_as/diameter_wiel


def f_aandrijving(x):
    u_veer = u_veer0 - x*overbrenging
    if u_veer > 0:
        f_veer = u_veer*k_veer
        f_aandrijf = f_veer*overbrenging
        return f_aandrijf
    else:
        return 0


def f_wrijving(v):
    f_luchtwrijving = 0.5*rho*oppervlak_car*cw_car*v**2
    if v > 0:
        f_lagers = cr*(massa_car+m_veer)*g
    else:
        f_lagers = 0
    return f_luchtwrijving + f_lagers


def versnelling(x, v):
    if x > 5:
        return 0
    som_krachten = f_aandrijving(x) - f_wrijving(v)
    return som_krachten/(massa_car + m_veer)


def integreer(tijdspan):
    a = np.zeros(len(tijdspan))
    v = np.zeros(len(tijdspan))
    x = np.zeros(len(tijdspan))
    x[0] = x0  # zou je in dit geval ook weg kunnen laten, want is al 0
    v[0] = v0  # zou je in dit geval ook weg kunnen laten, want is al 0
    
    delta_t = tijdspan[1]-tijdspan[0]
    for n in range(len(tijdspan)-1):
            a[n] = versnelling(x[n], v[n])
            v[n + 1] = v[n] + delta_t*a[n]
            x[n + 1] = x[n] + delta_t*v[n]
    return v, x  # a wordt niet gebruikt buiten de functie


t = np.linspace(0, 10, 10000)

for i in range(len(veren)):  
    u_veer0 = veren['u_max'][i]
    m_veer = veren['massa'][i]
    k_veer = veren['veerconstante'][i]
    snelheid, positie = integreer(t)
    plt.plot(positie, snelheid, label=veren['type'][i])
    eindsnelheid = snelheid[-1]
    print('bij veer {} is de eindsnelheid {:.2f} m/s'.format(veren['type'][i], eindsnelheid))

plt.xlim(0, 5)
plt.xlabel('afstand [m]')
plt.ylabel('snelheid [m/s]')
plt.grid()
plt.legend()
